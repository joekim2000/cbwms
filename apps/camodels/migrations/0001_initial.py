# Generated by Django 2.0.6 on 2018-12-18 03:54

import datetime
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ApprovePolicyCommonInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('step', models.IntegerField(blank=True, default=0, help_text='승인단계 입니다.', null=True)),
                ('oneselfallowed', models.BooleanField(default=True, help_text='승인자 본인승인가능 여부입니다.')),
                ('samepositionallowed', models.BooleanField(default=True, help_text='동일망에서만 승인가능 여부입니다.')),
                ('checkpassword', models.BooleanField(default=True, help_text='승인시 패스워드 사용여부입니다.')),
                ('mandate', models.BooleanField(default=True, help_text='승인위임기능 사용여부입니다.')),
                ('exceptextension', models.CharField(blank=True, help_text='승인예외 확장자입니다.', max_length=255, null=True)),
                ('externalapprover', models.CharField(blank=True, help_text='해당정책 사용 부서의 외부 대표승인자입니다.', max_length=255, null=True)),
                ('secuapprover', models.CharField(blank=True, help_text='해당정책 사용 부서의 개인정보 검출파일  승인자입니다.', max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ApproveProcess',
            fields=[
                ('approveprocessid', models.IntegerField(primary_key=True, serialize=False)),
                ('date', models.DateTimeField(blank=True, default=datetime.datetime.now, help_text='로그 생성 서버 시간 입니다.')),
                ('state', models.CharField(blank=True, default='상태', help_text='승인상태입니다.', max_length=20, null=True)),
                ('requester', models.CharField(blank=True, default='승인신청자없음', help_text='승인신청자입니다.', max_length=255, null=True)),
                ('approver', models.CharField(blank=True, default='승인자없음', help_text='승인자입니다.', max_length=255, null=True)),
                ('sendtype', models.CharField(blank=True, default='전송형태없음', help_text='전송형태입니다.', max_length=20, null=True)),
                ('mediatype', models.CharField(blank=True, default='매체형식없음', help_text='매체형식입니다.', max_length=20, null=True)),
                ('direction', models.CharField(blank=True, default='전송방향없음', help_text='전송방향입니다.', max_length=20, null=True)),
                ('reason', models.CharField(blank=True, default='전송사유없음', help_text='전송사유입니다.', max_length=255, null=True)),
                ('dlpinformation', models.TextField(blank=True, default='개인정보없음', help_text='개인정보 검출내역입니다.', null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ApproveProcessCommonInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(blank=True, default=datetime.datetime.now, help_text='로그 생성 서버 시간 입니다.')),
                ('state', models.CharField(blank=True, default='상태', help_text='승인상태입니다.', max_length=20, null=True)),
                ('requester', models.CharField(blank=True, default='승인신청자없음', help_text='승인신청자입니다.', max_length=255, null=True)),
                ('approver', models.CharField(blank=True, default='승인자없음', help_text='승인자입니다.', max_length=255, null=True)),
                ('sendtype', models.CharField(blank=True, default='전송형태없음', help_text='전송형태입니다.', max_length=20, null=True)),
                ('mediatype', models.CharField(blank=True, default='매체형식없음', help_text='매체형식입니다.', max_length=20, null=True)),
                ('direction', models.CharField(blank=True, default='전송방향없음', help_text='전송방향입니다.', max_length=20, null=True)),
                ('reason', models.CharField(blank=True, default='전송사유없음', help_text='전송사유입니다.', max_length=255, null=True)),
                ('dlpinformation', models.TextField(blank=True, default='개인정보없음', help_text='개인정보 검출내역입니다.', null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ApproveProcessLog',
            fields=[
                ('approveprocesslogid', models.IntegerField(primary_key=True, serialize=False)),
                ('date', models.DateTimeField(blank=True, default=datetime.datetime.now, help_text='로그 생성 서버 시간 입니다.')),
                ('state', models.CharField(blank=True, default='상태', help_text='승인상태입니다.', max_length=20, null=True)),
                ('requester', models.CharField(blank=True, default='승인신청자없음', help_text='승인신청자입니다.', max_length=255, null=True)),
                ('approver', models.CharField(blank=True, default='승인자없음', help_text='승인자입니다.', max_length=255, null=True)),
                ('sendtype', models.CharField(blank=True, default='전송형태없음', help_text='전송형태입니다.', max_length=20, null=True)),
                ('mediatype', models.CharField(blank=True, default='매체형식없음', help_text='매체형식입니다.', max_length=20, null=True)),
                ('direction', models.CharField(blank=True, default='전송방향없음', help_text='전송방향입니다.', max_length=20, null=True)),
                ('reason', models.CharField(blank=True, default='전송사유없음', help_text='전송사유입니다.', max_length=255, null=True)),
                ('dlpinformation', models.TextField(blank=True, default='개인정보없음', help_text='개인정보 검출내역입니다.', null=True)),
                ('approveprocess_approveprocessid', models.ForeignKey(default='1357', on_delete=django.db.models.deletion.CASCADE, to='camodels.ApproveProcess')),
            ],
        ),
        migrations.CreateModel(
            name='ClipboardPolicyCommonInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('maximumtextsize', models.IntegerField(blank=True, default=0, help_text='문서 클립보드전송 최대크기입니다.', null=True)),
                ('maximumimagesize', models.IntegerField(blank=True, default=0, help_text='이미지 클립보드전송 최대크기입니다.', null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('companyid', models.CharField(default='1357', max_length=255, primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(default='명칭없음', help_text='명칭을 입력하십시오.', max_length=255)),
                ('location', models.CharField(blank=True, help_text='그룹이 위치한 주소를 임력하십시오.', max_length=255, null=True)),
                ('administrator', models.CharField(blank=True, help_text='관리자 사번을 입력하십시오.', max_length=255, null=True)),
                ('policyname', models.CharField(default='자료전송정책없음', help_text='자료전송정책을 선택하십시오.', max_length=255)),
                ('urlpolicyname', models.CharField(default='URL연계정책없음', help_text='URL연계정책을 선택하십시오.', max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='DataPolicy',
            fields=[
                ('datapolicyid', models.AutoField(primary_key=True, serialize=False)),
                ('policyname', models.CharField(help_text='정책명입니다.', max_length=255, null=True, verbose_name='정책명')),
                ('pollingtime', models.IntegerField(choices=[(0, '사용안함'), (1, '5 초'), (2, '10 초'), (2, '30 초'), (2, '60 초')], default=0, help_text='목록갱신 주기입니다.', null=True, verbose_name='목록갱신주기')),
                ('securitylevel', models.IntegerField(choices=[(0, '사용안함'), (1, '무결성'), (2, '무결성+암호화')], default=0, help_text='보안등급입니다.', null=True, verbose_name='보안등급')),
                ('jionupdate', models.BooleanField(default=False, help_text='자료반출입에이전트 업데이트배포 활성화 여부입니다.', verbose_name='자료반출입')),
                ('systemupdate', models.IntegerField(choices=[(0, '사용안함'), (1, 'DRM 클라이어트'), (2, 'DLP 클라이언트'), (3, 'PMS 클라이언트'), (4, '매체제어 클라이언트'), (5, 'PC보안 클라이언트')], default=0, help_text='외부프로그램 업데이트배포 활성화 여부 입니다.', null=True, verbose_name='외부프로그램')),
                ('userpasswordupdate', models.IntegerField(choices=[(0, '사용안함'), (1, '1주'), (2, '4주'), (3, '8주'), (4, '16주'), (5, '사용자정의')], default=0, help_text='사용자패스워드 갱신주기입니다.', null=True, verbose_name='사용자암호')),
                ('pcvaccine', models.IntegerField(choices=[(0, '사용안함'), (1, '안랩 V3'), (2, 'sofos'), (3, '알약')], default=0, help_text='PC백신을 선택입니다.', null=True, verbose_name='PC 백신')),
                ('company', models.ManyToManyField(to='camodels.Company', verbose_name='회사명')),
            ],
        ),
        migrations.CreateModel(
            name='DataPolicyforEmployee',
            fields=[
                ('dplcyforempid', models.CharField(default='1357', max_length=255, primary_key=True, serialize=False, unique=True)),
                ('company', models.ForeignKey(default='1357', on_delete=django.db.models.deletion.CASCADE, to='camodels.Company')),
                ('datapolicy', models.ForeignKey(default='1357', on_delete=django.db.models.deletion.CASCADE, to='camodels.DataPolicy')),
            ],
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('departmentid', models.CharField(default='1357', max_length=255, primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(default='명칭없음', help_text='명칭을 입력하십시오.', max_length=255)),
                ('location', models.CharField(blank=True, help_text='그룹이 위치한 주소를 임력하십시오.', max_length=255, null=True)),
                ('administrator', models.CharField(blank=True, help_text='관리자 사번을 입력하십시오.', max_length=255, null=True)),
                ('policyname', models.CharField(default='자료전송정책없음', help_text='자료전송정책을 선택하십시오.', max_length=255)),
                ('urlpolicyname', models.CharField(default='URL연계정책없음', help_text='URL연계정책을 선택하십시오.', max_length=255)),
                ('company', models.ForeignKey(default='1357', on_delete=django.db.models.deletion.CASCADE, to='camodels.Company')),
            ],
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(blank=True, max_length=255)),
                ('document', models.FileField(upload_to='documents/')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('employeeid', models.CharField(default='1357', max_length=255, primary_key=True, serialize=False, unique=True)),
                ('employeenumber', models.CharField(default='사번없음', help_text='사번입니다.', max_length=255)),
                ('name', models.CharField(default='이름없음', help_text='직원 이름입니다..', max_length=255)),
                ('positionid', models.CharField(default='직급없음', help_text='직급id입니다.', max_length=255)),
                ('position', models.CharField(default='직급없음', help_text='직급입니다.', max_length=255)),
                ('dutyid', models.CharField(default='직책없음', help_text='직책id입니다.', max_length=255)),
                ('duty', models.CharField(default='직책없음', help_text='직책입니다.', max_length=255)),
                ('mail', models.CharField(default='mail@address.co.kr', help_text='메일 주소입니다.', max_length=255)),
                ('approverflag', models.BooleanField(default=False)),
                ('administratorflag', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='ExternalApprover',
            fields=[
                ('externalapproverid', models.AutoField(primary_key=True, serialize=False)),
                ('externalapprover', models.CharField(blank=True, default='승인자없음', help_text='외부승인자입니다.', max_length=255, null=True)),
                ('department', models.ManyToManyField(to='camodels.Department')),
            ],
        ),
        migrations.CreateModel(
            name='ExternalServicePolicyCommonInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('enableservice', models.BooleanField(default=True, help_text='외부서비스연계 사용여부입니다.')),
                ('services', models.CharField(blank=True, default='WebProxy 서버주소없음', help_text='외부서비스연계 내역입니다.', max_length=20, null=True)),
                ('clientvaccine', models.BooleanField(default=True, help_text='P C백신 사용여부입니다.')),
                ('servervaccine', models.BooleanField(default=True, help_text='서버백신 사용여부입니다.')),
                ('forgerydetection', models.BooleanField(default=True, help_text='위변조검사 사용여부입니다.')),
            ],
        ),
        migrations.CreateModel(
            name='Files',
            fields=[
                ('fileid', models.IntegerField(primary_key=True, serialize=False)),
                ('path', models.CharField(blank=True, default='파일경로없음', help_text='파일경로입니다.', max_length=512, null=True)),
                ('filename', models.CharField(blank=True, default='파일이름없음', help_text='파일이름입니다.', max_length=256, null=True)),
                ('filetype', models.CharField(blank=True, default='파일형식없음', help_text='파일형식입니다.', max_length=20, null=True)),
                ('filesize', models.IntegerField(blank=True, default=0, help_text='파일크기입니다.', null=True)),
                ('attribute', models.CharField(blank=True, default='파일속성정보없음', help_text='파일속성정보입니다.', max_length=20, null=True)),
                ('encoding', models.BooleanField(default=False, help_text='사용자 암호화 여부입니다.')),
                ('innercompressfile', models.TextField(blank=True, default='압축파일내 파일정보없음', help_text='압축파일내 파일정보입니다.', null=True)),
                ('approveprocess_approveprocessid', models.ForeignKey(default='1357', on_delete=django.db.models.deletion.CASCADE, to='camodels.ApproveProcess')),
            ],
        ),
        migrations.CreateModel(
            name='FilesPolicyCommonInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('maximumfilesize', models.IntegerField(blank=True, default=0, help_text='전체파일의 전송 가능한  최대용량입니다.', null=True)),
                ('onetimefilesize', models.IntegerField(blank=True, default=0, help_text='1회 전송 가능한 최대용량입니다.', null=True)),
                ('maximumfiles', models.IntegerField(blank=True, default=0, help_text='1회 전송시 최대 파일 갯수 입니다.', null=True)),
                ('reasonlength', models.IntegerField(blank=True, default=0, help_text='전송사유 최대길이 입니다.', null=True)),
                ('checkcompressfile', models.BooleanField(default=True, help_text='압축파일을 검사합니다.')),
                ('sendfolder', models.BooleanField(default=True, help_text='폴더를 전송 합니다.')),
                ('whiteextension', models.BooleanField(default=True, help_text='전송 가능한 확장자입니다.')),
                ('blackextension', models.BooleanField(default=True, help_text='전송 불가능한 확장자입니다.')),
            ],
        ),
        migrations.CreateModel(
            name='InApprovePolicy',
            fields=[
                ('approveid', models.AutoField(primary_key=True, serialize=False)),
                ('step', models.IntegerField(choices=[(0, '사용안함'), (1, '1단계'), (2, '2단계')], default=0, help_text='승인단계 입니다.', null=True, verbose_name='승인단계')),
                ('oneselfallowed', models.BooleanField(default=True, help_text='승인자 본인승인가능 여부입니다.', verbose_name='본인승인 가능')),
                ('samepositionallowed', models.BooleanField(default=True, help_text='동일망에서만 승인가능 여부입니다.', verbose_name='동일망에서만 승인')),
                ('checkpassword', models.BooleanField(default=True, help_text='승인시 암호확인 여부입니다.', verbose_name='승인시 암호확인')),
                ('postfacto', models.IntegerField(choices=[(0, '사용안함'), (1, '승인후사용'), (2, '시간외사용'), (3, '항상사용')], default=0, help_text='사후승인사용 여부입니다.', null=True, verbose_name='사후승인')),
                ('mandate', models.BooleanField(default=True, help_text='승인위임기능 사용여부입니다.', verbose_name='승인위임')),
                ('exceptextension', models.CharField(help_text='승인예외 확장자입니다.', max_length=255, null=True, verbose_name='승인예외 확장자')),
                ('externalapprover', models.CharField(help_text='해당정책 사용 부서의 외부 대표승인자입니다.', max_length=255, null=True, verbose_name='외부승인자')),
                ('secuapprover', models.CharField(help_text='해당정책 사용 부서의 개인정보 검출파일  승인자입니다.', max_length=255, null=True, verbose_name='개인정보검출 승인자')),
            ],
        ),
        migrations.CreateModel(
            name='InClipboardPolicy',
            fields=[
                ('clipboardid', models.AutoField(primary_key=True, serialize=False)),
                ('maximumtextsize', models.IntegerField(choices=[(0, '제한없음'), (1, '1000'), (2, '10000')], default=0, help_text='문서 클립보드전송 최대길이입니다.', null=True, verbose_name='문자길이')),
                ('maximumimagesize', models.IntegerField(choices=[(0, '제한없음'), (1, '10 M'), (2, '100 M'), (3, '500 M'), (4, '1 G')], default=0, help_text='이미지 클립보드전송 최대크기입니다.', null=True, verbose_name='이미지크기')),
            ],
        ),
        migrations.CreateModel(
            name='InExternalServicePolicy',
            fields=[
                ('extsvcid', models.AutoField(primary_key=True, serialize=False)),
                ('enableservice', models.BooleanField(default=True, help_text='외부서비스연계 사용여부입니다.', verbose_name='외부서비스 연계')),
                ('services', models.CharField(default='WebProxy 서버주소없음', help_text='외부서비스연계 내역입니다.', max_length=20, null=True, verbose_name='외부서비스 연계내역')),
                ('clientvaccine', models.BooleanField(default=True, help_text='PC백신 사용여부입니다.', verbose_name='PC백신')),
                ('servervaccine', models.BooleanField(default=True, help_text='서버백신 사용여부입니다.', verbose_name='서버백신')),
                ('forgerydetection', models.BooleanField(default=True, help_text='위변조검사 사용여부입니다.', verbose_name='위변조 검사')),
            ],
        ),
        migrations.CreateModel(
            name='InFilesPolicy',
            fields=[
                ('filesid', models.AutoField(primary_key=True, serialize=False)),
                ('maximumfilesize', models.IntegerField(choices=[(0, '제한없음'), (1, '10 M'), (2, '100 M'), (3, '500 M'), (3, '1 G')], default=0, help_text='전체파일의 전송 가능한  최대용량입니다.', null=True, verbose_name='첨부파일 최대크기')),
                ('onetimefilesize', models.IntegerField(choices=[(0, '제한없음'), (1, '10 M'), (2, '100 M'), (3, '500 M'), (3, '1 G')], default=0, help_text='1회 전송 가능한 최대용량입니다.', null=True, verbose_name='1회전송 파일크기 합')),
                ('maximumfiles', models.IntegerField(choices=[(0, '제한없음'), (1, '5 개'), (2, '10 개')], default=0, help_text='1회 전송시 최대 파일 갯수 입니다.', null=True, verbose_name='파일갯수')),
                ('reasonlength', models.IntegerField(choices=[(0, '제한없음'), (1, '5 글자 이상'), (2, '10 글자 이상')], default=0, help_text='전송사유 최대길이 입니다.', null=True, verbose_name='전송사유 길이')),
                ('checkcompressfile', models.BooleanField(default=True, help_text='압축파일을 검사합니다.', verbose_name='압축파일 검사')),
                ('sendfolder', models.BooleanField(default=True, help_text='폴더를 전송 합니다.', verbose_name='폴더전송')),
                ('whiteextension', models.BooleanField(default=True, help_text='전송 가능한 확장자입니다.', verbose_name='전송가능 확장자')),
                ('blackextension', models.BooleanField(default=True, help_text='전송 불가능한 확장자입니다.', verbose_name='전송불가 확장자')),
            ],
        ),
        migrations.CreateModel(
            name='InPolicy',
            fields=[
                ('innerpolicyid', models.AutoField(primary_key=True, serialize=False)),
                ('policyname', models.CharField(help_text='정책명 입니다.', max_length=20, null=True, verbose_name='정책명')),
            ],
        ),
        migrations.CreateModel(
            name='InReceivedMailPolicy',
            fields=[
                ('receivedmailid', models.AutoField(primary_key=True, serialize=False)),
                ('domain', models.CharField(default='메일서버 주소없음', help_text='내부망 수신메일서버 주소입니다.', max_length=20, null=True, verbose_name='내부망 메일서버 주소')),
                ('port', models.IntegerField(default=0, help_text='내부망 수신메일서버 포트입니다.', null=True, verbose_name='내부망 메일서버 포트')),
                ('syncinterval', models.IntegerField(choices=[(0, '0'), (1, '1'), (2, '10')], default=0, help_text='내부망 수신메일서버 동기화 간격입니다.', null=True, verbose_name='동기화 간격')),
                ('usessl', models.BooleanField(default=True, verbose_name='SSL 사용')),
            ],
        ),
        migrations.CreateModel(
            name='InReceptionPolicy',
            fields=[
                ('inreceptid', models.AutoField(primary_key=True, serialize=False)),
                ('inrcvmailid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='camodels.InReceivedMailPolicy', verbose_name='내부망수신 메일정책')),
            ],
        ),
        migrations.CreateModel(
            name='InSendMailPolicy',
            fields=[
                ('sendmailid', models.AutoField(primary_key=True, serialize=False)),
                ('domain', models.CharField(default='메일서버 주소없음', help_text='내부망 발신메일서버 주소입니다.', max_length=20, null=True, verbose_name='내부망 메일서버 주소')),
                ('port', models.IntegerField(default=0, help_text='내부망 발신메일서버 포트입니다.', null=True, verbose_name='내부망 메일서버 포트')),
                ('syncinterval', models.IntegerField(choices=[(0, '0'), (1, '1'), (2, '10')], default=0, help_text='내부망 발신메일서버 동기화 간격입니다.', null=True, verbose_name='동기화 간격')),
                ('usessl', models.BooleanField(default=True, verbose_name='SSL 사용')),
            ],
        ),
        migrations.CreateModel(
            name='InTransmissionPolicy',
            fields=[
                ('intransid', models.AutoField(primary_key=True, serialize=False)),
                ('usetransmission', models.BooleanField(default=False, help_text='파일반출기능 사용여부입니다.', verbose_name='파일반출')),
                ('useexternalservice', models.BooleanField(default=False, help_text='외부서비스연계 사용여부입니다.', verbose_name='외부서비스연계')),
                ('useapprove', models.IntegerField(choices=[(0, '사용안함'), (1, '1단계'), (2, '2단계')], default=False, help_text='승인기능 사용여부입니다.', verbose_name='승인단계')),
                ('useclipboard', models.BooleanField(default=False, help_text='클립보드반출기능 사용여부입니다.', verbose_name='클립보드반출')),
                ('usecertifiate', models.BooleanField(default=False, help_text='공인인증서반출기능 사용여부입니다.', verbose_name='공인인증서반출')),
                ('usewebproxy', models.BooleanField(default=False, help_text='URL연계기능 사용여부입니다.', verbose_name='웹사이트연계')),
                ('usemail', models.BooleanField(default=False, help_text='메일반출기능 사용여부입니다.', verbose_name='메일반출')),
                ('inapprovepolicy', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='camodels.InApprovePolicy', verbose_name='승인단계 세부정책')),
                ('inclipboardpolicy', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='camodels.InClipboardPolicy', verbose_name='클립보드반출 세부정책')),
                ('inexternalservicepolicy', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='camodels.InExternalServicePolicy', verbose_name='외부서비스연계 세부정책')),
                ('infilespolicy', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='camodels.InFilesPolicy', verbose_name='파일반출 세부정책')),
                ('insendmailpolicy', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='camodels.InSendMailPolicy', verbose_name='메일반출 세부정책')),
            ],
        ),
        migrations.CreateModel(
            name='InWebProxyPolicy',
            fields=[
                ('webproxyid', models.AutoField(primary_key=True, serialize=False)),
                ('innerdomain', models.TextField(default='내부도메인없음', help_text='전송 금지할 내부도메인 목록입니다.', null=True, verbose_name='전송금지 내부도메인')),
                ('outerdomain', models.CharField(default='URL연계서버 주소없음', help_text='URL연계서버 주소입니다.', max_length=20, null=True, verbose_name='URL연계서버 주소')),
                ('port', models.IntegerField(default=0, help_text='WebProxy서버 포트입니다.', null=True, verbose_name='URL연계서버 포트')),
            ],
        ),
        migrations.CreateModel(
            name='MailCommonInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('domain', models.CharField(blank=True, default='WebProxy 서버주소없음', help_text='WebProxy서버 주소 입니다.', max_length=20, null=True)),
                ('port', models.IntegerField(blank=True, default=0, help_text='WebProxy 서버포트 입니다.', null=True)),
                ('syncinterval', models.IntegerField(blank=True, default=0, help_text='내부망 발신메일서버 동기화 간격입니다.', null=True)),
                ('usessl', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='Mandate',
            fields=[
                ('mandateid', models.IntegerField(primary_key=True, serialize=False)),
                ('startdate', models.DateTimeField(blank=True, default=datetime.datetime.now, help_text='승인위임 시작시간을 입력하십시오.')),
                ('enddate', models.DateTimeField(blank=True, default=datetime.datetime.now, help_text='승인위임 종료시간을을 입력하십시오.')),
                ('requester', models.CharField(blank=True, default='승인신청자없음', help_text='승인신청자를 확인하십시오.', max_length=255, null=True)),
                ('approver', models.CharField(blank=True, default='승인자없음', help_text='승인자를 확인하십시오.', max_length=255, null=True)),
                ('approveprocess_approveprocessid', models.ForeignKey(default='1357', on_delete=django.db.models.deletion.CASCADE, to='camodels.ApproveProcess')),
                ('employee', models.ForeignKey(default='1357', on_delete=django.db.models.deletion.CASCADE, to='camodels.Employee')),
            ],
        ),
        migrations.CreateModel(
            name='MembershipforDept',
            fields=[
                ('mbsfordptid', models.CharField(default='1357', max_length=255, primary_key=True, serialize=False, unique=True)),
                ('date_joined', models.DateField(blank=True, default=datetime.datetime.now, help_text='입사일을 입력하십시오.')),
                ('date_resigned', models.DateField(blank=True, help_text='퇴사일을 입력하십시오.')),
                ('joined_reason', models.CharField(blank=True, help_text='입사 사유를 입력하십시오.', max_length=255, null=True)),
                ('department', models.ForeignKey(default='1357', on_delete=django.db.models.deletion.CASCADE, to='camodels.Department')),
                ('employee', models.ForeignKey(default='1357', on_delete=django.db.models.deletion.CASCADE, to='camodels.Employee')),
            ],
        ),
        migrations.CreateModel(
            name='MembershipforProc',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_joined', models.DateField(blank=True, default=datetime.datetime.now, help_text='입사일을 입력하십시오.')),
                ('date_resigned', models.DateField(blank=True, help_text='퇴사일을 입력하십시오.')),
                ('joined_reason', models.CharField(blank=True, help_text='입사 사유를 입력하십시오.', max_length=255, null=True)),
                ('approveprocess', models.ForeignKey(default='1357', on_delete=django.db.models.deletion.CASCADE, to='camodels.ApproveProcess')),
                ('employee', models.ForeignKey(default='1357', on_delete=django.db.models.deletion.CASCADE, to='camodels.Employee')),
            ],
        ),
        migrations.CreateModel(
            name='MembershipforTeam',
            fields=[
                ('mbsfortmid', models.CharField(default='1357', max_length=255, primary_key=True, serialize=False, unique=True)),
                ('date_joined', models.DateField(blank=True, default=datetime.datetime.now, help_text='입사일을 입력하십시오.')),
                ('date_resigned', models.DateField(blank=True, help_text='퇴사일을 입력하십시오.')),
                ('joined_reason', models.CharField(blank=True, help_text='입사 사유를 입력하십시오.', max_length=255, null=True)),
                ('employee', models.ForeignKey(default='1357', on_delete=django.db.models.deletion.CASCADE, to='camodels.Employee')),
            ],
        ),
        migrations.CreateModel(
            name='OutApprovePolicy',
            fields=[
                ('approveid', models.AutoField(primary_key=True, serialize=False)),
                ('step', models.IntegerField(choices=[(0, '사용안함'), (1, '1단계'), (2, '2단계')], default=0, help_text='승인단계 입니다.', null=True, verbose_name='승인단계')),
                ('oneselfallowed', models.BooleanField(default=True, help_text='승인자 본인승인가능 여부입니다.', verbose_name='본인승인 가능')),
                ('samepositionallowed', models.BooleanField(default=True, help_text='동일망에서만 승인가능 여부입니다.', verbose_name='동일망에서만 승인')),
                ('checkpassword', models.BooleanField(default=True, help_text='승인시 패스워드 사용여부입니다.', verbose_name='승인시 암호확인')),
                ('postfacto', models.IntegerField(choices=[(0, '사용안함'), (1, '승인후사용'), (2, '시간외사용'), (3, '항상사용')], default=0, help_text='사후승인사용 여부입니다.', null=True, verbose_name='사후승인')),
                ('mandate', models.BooleanField(default=True, help_text='승인위임기능 사용여부입니다.', verbose_name='승인위임')),
                ('exceptextension', models.CharField(help_text='승인예외 확장자입니다.', max_length=255, null=True, verbose_name='승인예외 확장자')),
                ('externalapprover', models.CharField(help_text='해당정책 사용 부서의 외부 대표승인자입니다.', max_length=255, null=True, verbose_name='외부승인자')),
                ('secuapprover', models.CharField(help_text='해당정책 사용 부서의 개인정보 검출파일  승인자입니다.', max_length=255, null=True, verbose_name='개인정보검출 승인자')),
            ],
        ),
        migrations.CreateModel(
            name='OutClipboardPolicy',
            fields=[
                ('clipboardid', models.AutoField(primary_key=True, serialize=False)),
                ('maximumtextsize', models.IntegerField(choices=[(0, '제한없음'), (1, '1000'), (2, '10000')], default=0, help_text='문서 클립보드전송 최대크기입니다.', null=True, verbose_name='문자길이')),
                ('maximumimagesize', models.IntegerField(choices=[(0, '제한없음'), (1, '10 M'), (2, '100 M'), (3, '500 M'), (4, '1 G')], default=0, help_text='이미지 클립보드전송 최대크기입니다.', null=True, verbose_name='이미지크기')),
            ],
        ),
        migrations.CreateModel(
            name='OutExternalServicePolicy',
            fields=[
                ('extsvcid', models.AutoField(primary_key=True, serialize=False)),
                ('enableservice', models.BooleanField(default=True, help_text='외부서비스연계 사용여부입니다.', verbose_name='외부서비스 연계')),
                ('services', models.CharField(default='WebProxy 서버주소없음', help_text='외부서비스연계 내역입니다.', max_length=20, null=True, verbose_name='외부서비스 연계내역')),
                ('clientvaccine', models.BooleanField(default=True, help_text='PC백신 사용여부입니다.', verbose_name='PC백신')),
                ('servervaccine', models.BooleanField(default=True, help_text='서버백신 사용여부입니다.', verbose_name='서버백신')),
                ('forgerydetection', models.BooleanField(default=True, help_text='위변조검사 사용여부입니다.', verbose_name='위변조 검사')),
            ],
        ),
        migrations.CreateModel(
            name='OutFilesPolicy',
            fields=[
                ('filesid', models.AutoField(primary_key=True, serialize=False)),
                ('maximumfilesize', models.IntegerField(choices=[(0, '제한없음'), (1, '10 M'), (2, '100 M'), (3, '500 M'), (3, '1 G')], default=0, help_text='전체파일의 전송 가능한  최대용량입니다.', null=True, verbose_name='첨부파일 최대크기')),
                ('onetimefilesize', models.IntegerField(choices=[(0, '제한없음'), (1, '10 M'), (2, '100 M'), (3, '500 M'), (3, '1 G')], default=0, help_text='1회 전송 가능한 최대용량입니다.', null=True, verbose_name='1회전송 파일크기 합')),
                ('maximumfiles', models.IntegerField(choices=[(0, '제한없음'), (1, '5 개'), (2, '10 개')], default=0, help_text='1회 전송시 최대 파일 갯수 입니다.', null=True, verbose_name='파일갯수')),
                ('reasonlength', models.IntegerField(choices=[(0, '제한없음'), (1, '5 글자 이상'), (2, '10 글자 이상')], default=0, help_text='전송사유 최대길이 입니다.', null=True, verbose_name='전송사유 길이')),
                ('checkcompressfile', models.BooleanField(default=True, help_text='압축파일을 검사합니다.', verbose_name='압축파일 검사')),
                ('sendfolder', models.BooleanField(default=True, help_text='폴더를 전송 합니다.', verbose_name='폴더전송')),
                ('whiteextension', models.BooleanField(default=True, help_text='전송 가능한 확장자입니다.', verbose_name='전송가능 확장자')),
                ('blackextension', models.BooleanField(default=True, help_text='전송 불가능한 확장자입니다.', verbose_name='전송불가 확장자')),
            ],
        ),
        migrations.CreateModel(
            name='OutPolicy',
            fields=[
                ('outerpolicyid', models.AutoField(primary_key=True, serialize=False)),
                ('policyname', models.CharField(help_text='정책명 입니다.', max_length=20, null=True, verbose_name='정책명')),
                ('outreceptionpolicy', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='camodels.InReceptionPolicy', verbose_name='외부망 반입정책')),
                ('outtransmissionpolicy', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='camodels.InTransmissionPolicy', verbose_name='외부망 반출정책')),
            ],
        ),
        migrations.CreateModel(
            name='OutReceivedMailPolicy',
            fields=[
                ('receivedmailid', models.AutoField(primary_key=True, serialize=False)),
                ('domain', models.CharField(default='WebProxy 서버주소없음', help_text='외부망 발신메일서버 주소입니다.', max_length=20, null=True, verbose_name='내부망 메일서버 주소')),
                ('port', models.IntegerField(default=0, help_text='외부망 발신메일서버 포트입니다.', null=True, verbose_name='내부망 메일서버 포트')),
                ('syncinterval', models.IntegerField(choices=[(0, '0'), (1, '1'), (2, '10')], default=0, help_text='외부망 발신메일서버 동기화 간격입니다.', null=True, verbose_name='동기화 간격')),
                ('usessl', models.BooleanField(default=True, verbose_name='SSL 사용')),
            ],
        ),
        migrations.CreateModel(
            name='OutReceptionPolicy',
            fields=[
                ('outreceptid', models.AutoField(primary_key=True, serialize=False)),
                ('outrcvmailid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='camodels.OutReceivedMailPolicy', verbose_name='내부망수신 메일정책')),
            ],
        ),
        migrations.CreateModel(
            name='OutSendMailPolicy',
            fields=[
                ('sendmailid', models.AutoField(primary_key=True, serialize=False)),
                ('domain', models.CharField(default='WebProxy 서버주소없음', help_text='외부망 발신메일서버 주소입니다.', max_length=20, null=True, verbose_name='내부망 메일서버 주소')),
                ('port', models.IntegerField(default=0, help_text='외부망 발신메일서버 포트입니다.', null=True, verbose_name='내부망 메일서버 포트')),
                ('syncinterval', models.IntegerField(choices=[(0, '0'), (1, '1'), (2, '10')], default=0, help_text='외부망 발신메일서버 동기화 간격입니다.', null=True, verbose_name='동기화 간격')),
                ('usessl', models.BooleanField(default=True, verbose_name='SSL 사용')),
            ],
        ),
        migrations.CreateModel(
            name='OutTransmissionPolicy',
            fields=[
                ('outtransid', models.AutoField(primary_key=True, serialize=False)),
                ('usetransmission', models.BooleanField(default=False, help_text='파일반입기능 사용여부입니다.', verbose_name='파일반입')),
                ('useexternalservice', models.BooleanField(default=False, help_text='외부서비스연계 사용여부입니다.', verbose_name='외부서비스연계')),
                ('useapprove', models.IntegerField(choices=[(0, '사용안함'), (1, '1단계'), (2, '2단계')], default=False, help_text='승인기능 사용여부입니다.', verbose_name='승인단계')),
                ('useclipboard', models.BooleanField(default=False, help_text='클립보드반입기능 사용여부입니다.', verbose_name='클립보드반입')),
                ('usecertifiate', models.BooleanField(default=False, help_text='공인인증서반입기능 사용여부입니다.', verbose_name='공인인증서반입')),
                ('usemail', models.BooleanField(default=False, help_text='메일반입기능 사용여부입니다.', verbose_name='메일반입')),
                ('outapprovepolicy', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='camodels.OutApprovePolicy', verbose_name='승인단계 세부정책')),
                ('outclipboardpolicy', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='camodels.OutClipboardPolicy', verbose_name='클립보드반입 세부정책')),
                ('outexternalservicepolicy', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='camodels.OutExternalServicePolicy', verbose_name='외부서비스연계 세부정책')),
                ('outfilespolicy', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='camodels.OutFilesPolicy', verbose_name='파일반입 세부정책')),
                ('outsendmailpolicy', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='camodels.OutSendMailPolicy', verbose_name='메일반입 세부정책')),
            ],
        ),
        migrations.CreateModel(
            name='PersonnelCommonInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='명칭없음', help_text='명칭을 입력하십시오.', max_length=255)),
                ('location', models.CharField(blank=True, help_text='그룹이 위치한 주소를 임력하십시오.', max_length=255, null=True)),
                ('administrator', models.CharField(blank=True, help_text='관리자 사번을 입력하십시오.', max_length=255, null=True)),
                ('policyname', models.CharField(default='자료전송정책없음', help_text='자료전송정책을 선택하십시오.', max_length=255)),
                ('urlpolicyname', models.CharField(default='URL연계정책없음', help_text='URL연계정책을 선택하십시오.', max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='ReceptionPolicyCommonInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('usereception', models.BooleanField(default=True)),
                ('useclientvaccine', models.BooleanField(default=True)),
                ('useclipboard', models.BooleanField(default=True)),
                ('usecertificate', models.BooleanField(default=True)),
                ('usereceivemail', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='ReferenceCommonInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reference', models.CharField(blank=True, help_text='비고', max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Resources',
            fields=[
                ('resourcesid', models.AutoField(primary_key=True, serialize=False)),
                ('os', models.CharField(blank=True, default='OS', help_text='OS를 확인하십시오.', max_length=255, null=True)),
                ('osversion', models.CharField(blank=True, default='OS Version 없음', help_text='OS Vession을 확인하십시오.', max_length=255, null=True)),
                ('x86_x64', models.CharField(blank=True, default='x86_x64 없음', help_text='32비트/64비트 패키지를 확인하십시오.', max_length=255, null=True)),
                ('systemlocale', models.CharField(blank=True, default='시스템문자형식없음', help_text='시스템 문자 형식을 확인하십시오.', max_length=255, null=True)),
                ('inputlocale', models.CharField(blank=True, default='입력문자형식없음', help_text='입력 문자형식을 확인하십시오.', max_length=255, null=True)),
                ('dotnetruntime', models.CharField(blank=True, default='닷넷런타임없음', help_text='닷넷 버전을 확인하십시오.', max_length=255, null=True)),
                ('jionagent', models.CharField(blank=True, default='자료반출입에이전트버전없음', help_text='자료반출입에이전트 버전을 확인하십시오.', max_length=255, null=True)),
                ('ip', models.CharField(blank=True, default='ip정보없음', help_text='직원 PC IP 입니다.', max_length=512, null=True)),
                ('lastlogin', models.DateTimeField(blank=True, default=datetime.datetime.now, help_text='최종 로그인 시간 입니다.')),
                ('employee', models.ForeignKey(default='1357', on_delete=django.db.models.deletion.CASCADE, to='camodels.Employee')),
            ],
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('teamid', models.CharField(default='1357', max_length=255, primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(default='명칭없음', help_text='명칭을 입력하십시오.', max_length=255)),
                ('location', models.CharField(blank=True, help_text='그룹이 위치한 주소를 임력하십시오.', max_length=255, null=True)),
                ('administrator', models.CharField(blank=True, help_text='관리자 사번을 입력하십시오.', max_length=255, null=True)),
                ('policyname', models.CharField(default='자료전송정책없음', help_text='자료전송정책을 선택하십시오.', max_length=255)),
                ('urlpolicyname', models.CharField(default='URL연계정책없음', help_text='URL연계정책을 선택하십시오.', max_length=255)),
                ('company', models.ForeignKey(default='1357', on_delete=django.db.models.deletion.CASCADE, to='camodels.Company')),
                ('employee', models.ManyToManyField(through='camodels.MembershipforTeam', to='camodels.Employee')),
            ],
        ),
        migrations.CreateModel(
            name='TransmissionPolicyCommonInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('usetransmission', models.BooleanField(default=False, help_text='외부망 전송기능 사용여부입니다.')),
                ('useexternalservice', models.BooleanField(default=False, help_text='외부서비스연계 사용여부입니다.')),
                ('useapprove', models.BooleanField(default=False, help_text='승인기능 사용여부입니다.')),
                ('useclipboard', models.BooleanField(default=False, help_text='클립보드발신기능 사용여부입니다.')),
                ('usecertifiate', models.BooleanField(default=False, help_text='공인인증서발신기능 사용여부입니다.')),
                ('usewebproxy', models.BooleanField(default=False, help_text='URL연계기능 사용여부입니다.')),
                ('usemail', models.BooleanField(default=False, help_text='메일발신기능 사용여부입니다.')),
            ],
        ),
        migrations.CreateModel(
            name='URLBlackPolicy',
            fields=[
                ('blackpolicyid', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(default='WebProxy 서버주소없음', help_text='URL제한 사이트 이름입니다.', max_length=255, null=True)),
                ('domain', models.CharField(default='WebProxy 서버주소없음', help_text='WebProxy서버 주소 입니다.', max_length=20, null=True)),
                ('port', models.IntegerField(default=0, help_text='WebProxy 서버포트 입니다.', null=True)),
            ],
        ),
        migrations.CreateModel(
            name='URLCommonInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('domain', models.CharField(blank=True, default='WebProxy 서버주소없음', help_text='WebProxy서버 주소 입니다.', max_length=20, null=True)),
                ('port', models.IntegerField(blank=True, default=0, help_text='WebProxy 서버포트 입니다.', null=True)),
            ],
        ),
        migrations.CreateModel(
            name='URLExceptionPolicy',
            fields=[
                ('exceptionpolicyid', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(default='WebProxy 서버주소없음', help_text='망연계 접속하면 안되는 예외사이트 이름입니다.', max_length=255, null=True)),
                ('domain', models.CharField(default='WebProxy 서버주소없음', help_text='망연계 접속하면 안되는 예외사이트 도메인입니다.', max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='URLPolicy',
            fields=[
                ('assignurlpolicyid', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(default='WebProxy 서버주소없음', help_text='URL연계 사이트 이름입니다.', max_length=255, null=True)),
                ('starttime', models.TimeField(default=0, help_text='입사일을  입력하십시오.')),
                ('endtime', models.TimeField(default=24, help_text='입사일을  입력하십시오.')),
                ('company', models.ManyToManyField(to='camodels.Company')),
            ],
        ),
        migrations.CreateModel(
            name='URLPolicyforEmployee',
            fields=[
                ('uplcyforempid', models.CharField(default='1357', max_length=255, primary_key=True, serialize=False, unique=True)),
                ('company', models.ForeignKey(default='1357', on_delete=django.db.models.deletion.CASCADE, to='camodels.Company')),
                ('urlpolicy', models.ForeignKey(default='1357', on_delete=django.db.models.deletion.CASCADE, to='camodels.URLPolicy')),
            ],
        ),
        migrations.CreateModel(
            name='URLWhitePolicy',
            fields=[
                ('whitepolicyid', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(default='WebProxy 서버주소없음', help_text='URL연계 사이트 이름입니다.', max_length=255, null=True)),
                ('domain', models.CharField(default='WebProxy 서버주소없음', help_text='WebProxy서버 주소 입니다.', max_length=20, null=True)),
                ('port', models.IntegerField(default=0, help_text='WebProxy 서버포트 입니다.', null=True)),
                ('assignurlpolicy', models.ManyToManyField(to='camodels.URLPolicy')),
            ],
        ),
        migrations.AddField(
            model_name='urlexceptionpolicy',
            name='assignurlpolicy',
            field=models.ManyToManyField(to='camodels.URLPolicy'),
        ),
        migrations.AddField(
            model_name='urlblackpolicy',
            name='assignurlpolicy',
            field=models.ManyToManyField(to='camodels.URLPolicy'),
        ),
        migrations.AddField(
            model_name='membershipforteam',
            name='team',
            field=models.ForeignKey(default='1357', on_delete=django.db.models.deletion.CASCADE, to='camodels.Team'),
        ),
        migrations.AddField(
            model_name='intransmissionpolicy',
            name='inwebproxypolicy',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='camodels.InWebProxyPolicy', verbose_name='웹사이트연계 세부정책'),
        ),
        migrations.AddField(
            model_name='inpolicy',
            name='inreceptionpolicy',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='camodels.InReceptionPolicy', verbose_name='내부망 반입정책'),
        ),
        migrations.AddField(
            model_name='inpolicy',
            name='intransmissionpolicy',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='camodels.InTransmissionPolicy', verbose_name='내부망 반출정책'),
        ),
        migrations.AddField(
            model_name='externalapprover',
            name='team',
            field=models.ManyToManyField(to='camodels.Team'),
        ),
        migrations.AddField(
            model_name='department',
            name='employee',
            field=models.ManyToManyField(through='camodels.MembershipforDept', to='camodels.Employee'),
        ),
        migrations.AddField(
            model_name='approveprocess',
            name='employee',
            field=models.ManyToManyField(through='camodels.MembershipforProc', to='camodels.Employee'),
        ),
    ]
